"501 N GRAHAM ST" %>% grep("[^ ]+$")
as.vector("501 N GRAHAM ST") %>% grep("[^ ]+$")
tolist("hello")
list("hello")
help(gsub)
small %>% mutate(d = gsub("^[^ ]+$", "", address))
small %>% mutate(d = gsub("^([^ ]+$)", "", address))
small %>% mutate(d = gsub("[^ ]+$", "", address))
small %>% mutate(d = gsub("^.+ ", "", address))
small %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(address)
small %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword)
small %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = sum(n_distinct(lastword)))
grouped <- Addresses %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = sum(n_distinct(lastword)))
nrow(Addresses)
grouped <- Addresses %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword)
head(grouped)
grouped <- Addresses %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword)  %>% summarise(new = unique(lastword))
head(grouped)
grouped <- Addresses %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword)
head(grouped)
goruped$lastword %>% unique()
unique(grouped$lastword)
unique(grouped$lastword) %>% grepl(" APT|UNIT [[:digit:]]+$")
unique(grouped$lastword) %>% filter(grepl(" APT|UNIT [[:digit:]]+$"))
unique(grouped$lastword) %>% gsub(" APT|UNIT [[:digit:]]+$")
unique(grouped$lastword) %>% gsub(" APT|UNIT [[:digit:]]+$")
grouped <- Addresses %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword)
leftover_unique <- unique(grouped$lastword)
grouped <- Addresses %>% head(1000) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword)
head(grouped)
grouped <- Addresses %>% head(1000) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
head(grouped)
grouped <- Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
grouped
grouped
grouped <- Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
Addresses %>% head(1000) %>% grepl(" APT|UNIT [[:digit:]]+$", address)
names(Addresses)
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address))
grouped <- Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[:digit]]"))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[:digit]]"), lastword)
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[:digit]]", lastword))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[0-9]]", lastword))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[0-9]]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[0-9]]", lastword))
test <- Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[[0-9]]", lastword))
head(test)
test
test <- Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword))
test
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange()
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange(desc)
help(arrange)
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange(desc(count()))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange(desc(count)
)
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange(desc(count))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange(asc(count))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n_distinct(lastword)) %>% arrange(desc(count))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = count(lastword)) %>% arrange(desc(count))
test <- Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword)
test
test %>% count(lastword)
count(test, "lastword")
count
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = nrow(lastword)) %>% arrange(desc(count))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n(lastword)) %>% arrange(desc(count))
Addresses %>% head(1000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n()) %>% arrange(desc(count))
counts <- Addresses %>% head(10000) %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n()) %>% arrange(desc(count))
counts <- Addresses  %>% filter(! grepl(" APT|UNIT [[:digit:]]+$", address)) %>% mutate(lastword = gsub("^.+ ", "", address)) %>% filter(! grepl("[0-9]", lastword)) %>% group_by(lastword) %>% summarise(count = n()) %>% arrange(desc(count))
counts
counts$lastword[counts$count > 100]
counts$lastword[counts$count > 50]
counts$lastword[counts$count > 10]
counts$lastword[counts$count > 20]
output <- counts$lastword[counts$count > 20]
output <- counts$lastword[counts$count > 30] #LINE 6
output
head(counts, 100)
library(rvest)
library(lubridate)
# Don't delete this chunk if you are using the DataComputing package
library(DataComputing)
library(rvest)
library(lubridate)
page <- "http://en.wikipedia.org/wiki/List_of_nuclear_reactors"
xpath <- '//*[@id="mw-content-text"]/table'
table_list <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
library(rvest)
install.packages("rvest")
library(rvest)
library(lubridate)
page <- "http://en.wikipedia.org/wiki/List_of_nuclear_reactors"
xpath <- '//*[@id="mw-content-text"]/table'
table_list <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
```
library(rvest)
library(lubridate)
page <- "http://en.wikipedia.org/wiki/List_of_nuclear_reactors"
xpath <- '//*[@id="mw-content-text"]/table'
table_list <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
```
library(rvest)
library(lubridate)
page <- "http://en.wikipedia.org/wiki/List_of_nuclear_reactors"
xpath <- '//*[@id="mw-content-text"]/table'
table_list <- page %>%
read_html() %>%
html_nodes(xpath = xpath) %>%
html_table(fill = TRUE)
View(table_list)
table_list
table_list[20]
table_list[22]
table_list[23]
table_list[24]
table_list[25]
table_list[20]
table_list[19]
table_list[[20]]
table_list[22]
table_list[23]
table_list[[23]]
table_list[23]
table_list[23][0]
table_list[23][1]
table_list[23][17]
table_list[23]
colnames(table_list[23])
View(table_list[23])
table_list[23]$Closure
as.data.frame(table_list[23])
as.data.frame(table_list[23])$Closure
japan <- as.data.frame(table_list[23])
japan
japan$Name
japan[1]
japan[,1]
japan[1,]
names(japan)
head(japan, 2)
japan <- as.data.frame(table_list[23]) %>% filter(rownumber() != 1)
japan <- as.data.frame(table_list[23]) %>% filter(row_number() != 1)
head(japan 2)
head(japan, 2
)
names(japan)
ggplot(japan, aes(y = Capacity.in.MW, x = Construction.Start.Date)) + geom_point()
ggplot(japan, aes(y = Capacity.in.MW, x = Construction.Start.Date)) + geom_point()
japan <- as.data.frame(table_list[23]) %>% filter(row_number() != 1) %>% mutate(Construction.Start.Date = lubridate::dmy(Construction.Start.Date))
head(japan)
head(japan, 2)
japan <- as.data.frame(table_list[23]) %>% filter(row_number() != 1) %>% mutate(Construction.Start.Date = lubridate::dmy(Construction.Start.Date))
ggplot(japan, aes(y = Capacity.in.MW, x = Construction.Start.Date)) + geom_point()
ggplot(japan, aes(y = Capacity.in.MW, x = Construction.Start.Date)) + geom_point(aes(color = reactor))
names(japan)
ggplot(japan, aes(y = Capacity.in.MW, x = Construction.Start.Date)) + geom_point(aes(color = Reactor))
japan <- as.data.frame(table_list[23]) %>% filter(row_number() != 1) %>% mutate(Construction.Start.Date = lubridate::dmy(Construction.Start.Date), Commercial.Operation.Date = lubridate::dmy(Commercial.Operation.Date))
head(japan, 2)
help(geom_segment)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date))
help(geom_segment)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = 0, yend = 0))
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name))
tail(japan, 3)
head(japan, 5)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = c(Name, Reactor.No), yend = c(Name, Reactor.No)))
names(japan)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = c(Name, Reactor.No.), yend = c(Name, Reactor.No.)))
ggplot(japan, aes(y = c(Name, Reactor.No.), x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = c(Name, Reactor.No.), yend = c(Name, Reactor.No.)))
japan <- japan %>% mutate(Name = c(Name, Rector.No.))
japan <- japan %>% mutate(Name = c(Name, Reactor.No.))
head(japan, 5)
head(japan, 10)
japan <- japan %>% mutate(Name = c(Name, Reactor.No.))
c(japan$Name, japan$Reactor.No.)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name))
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segmentx = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name)
japan <- as.data.frame(table_list[23]) %>% filter(row_number() != 1) %>% mutate(Construction.Start.Date = lubridate::dmy(Construction.Start.Date), Commercial.Operation.Date = lubridate::dmy(Commercial.Operation.Date))
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name)
japan <- japan #%>% mutate(Name = c(Name, Reactor.No.))
names(japan)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name))
japan <- japan %>% unite(out, Name, Reactor.No)
japan <- japan %>% unite(out, Name, Reactor.No.)
head(japan)
japan <- japan %>% unite(Name, Name, Reactor.No.)
japan <- as.data.frame(table_list[23]) %>% filter(row_number() != 1) %>% mutate(Construction.Start.Date = lubridate::dmy(Construction.Start.Date), Commercial.Operation.Date = lubridate::dmy(Commercial.Operation.Date))
ggplot(japan, aes(y = Capacity.in.MW, x = Construction.Start.Date)) + geom_point(aes(color = Reactor))
```
##Construction Delays
```{r}
japan <- japan %>% unite(Name, Name, Reactor.No.)
ggplot(japan, aes(y = Name, x = Construction.Start.Date)) + geom_segment(aes(x = Construction.Start.Date, xend = Commercial.Operation.Date, y = Name, yend = Name))
myData = simpleFun("Aniket", "2/12/1994")
simpleFun = function(lastName, birthDay) {
system_info <- Sys.info()
return(list(lastName, birthDay,system_info))
}
myData = simpleFun("Aniket", "2/12/1994")
myData
myData = simpleFun("Aniket", "10/09/1994")
myData
save(myData, file = "lab10.rda")
save(myData, file = "lab10.rda")
ls
load("~/dropbox/stat133/lab10/lab10Dir/lab10.rda")
load("~/Downloads/lab10.rda")
myData
log_arima_1
require(quantmod)
install.packages("quantmod")
install.packages("nnet")
install.packages("caret")
library("dplyr")
county_features <- read.csv("data/county_facts_dictionary.csv")
setwd("~/dropbox/stat133/proj")
library("dplyr")
county_features <- read.csv("data/county_facts_dictionary.csv")
county_data <- read.csv("data/county_facts.csv")
results <- read.csv("data/primary_results.csv")
data_with_results <- left_join(results, county_data, by = c("fips" = "fips"))
View(data_with_results)
trump <- filter(data_with_results, candidate = "Donald Trump")
trump <- filter(data_with_results, candidate == "Donald Trump")
View(trump)
trump <- filter(data_with_results, candidate == "Donald Trump")
sanders <- filter(data_with_results, candidate == "Bernie Sanders")
clinton <- filter(data_with_results, candidate == "Hillary Clinton")
cruz <- filter(data_with_results, candidate == "Ted Cruz")
head(clinton)
lm(trump$votes ~ trump$PST045214 + trump$PST040210)
View(county_features)
trump_nums <- subset(trump, select = - c("state", "state_abbreviation.x"))
trump_nums <- subset(trump, select = - c("state"))
trump_nums <- subset(trump, select = - state)
trump_nums <- subset(trump, select = - c(state:candidate))
View(trump_nums)
trump_nums <- subset(trump, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
View(trump_nums)
data_with_results <- left_join(results, county_data, by = c("fips" = "fips"))
trump <- filter(data_with_results, candidate == "Donald Trump")
sanders <- filter(data_with_results, candidate == "Bernie Sanders")
clinton <- filter(data_with_results, candidate == "Hillary Clinton")
cruz <- filter(data_with_results, candidate == "Ted Cruz")
trump_nums <- subset(trump, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
sanders_nums <- subset(sanders, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
clinton_nums <- subset(clinton, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
cruz_nums <- subset(cruz, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
View(cruz_nums)
help(lm)
trump_model <- lm(votes ~ PST045214, trump_nums)
trump_model
trump_model <- lm(votes ~ PST045214:POP06210, trump_nums)
trump_model <- lm(votes ~ PST045214:POP060210, trump_nums)
trump_model
trump_model <- lm(votes ~ subset(trump_nums, select = PST045214:POP060210), trump_nums)
trump_model <- lm(votes ~ subset(trump_nums, select = c(PST045214:POP060210)), trump_nums)
subset(trump_nums, select =  c(PST045214:POP060210))
trump_model <- lm(votes ~ ., trump_nums)
trump_model
sort
sort(trump_model)
trump_model <- lm(votes ~ ., trump_nums)
sanders_model <- lm(votes ~ ., sanders_nums)
clinton_model <- lm(votes ~ ., clinton_nums)
cruz_model <- lm(votes ~ ., cruz_nums)
head(cruz_model)
trump_model$coefficients
sort(trump_model$coefficients)
sort(abs(trump_model$coefficients))
sort(abs(trump_model$coefficients), desc = T)
help("sort")
sort(abs(trump_model$coefficients), decreasing = T)
head(sort(abs(trump_model$coefficients), decreasing = T), 10)
head(sort(abs(sanders_model$coefficients), decreasing = T), 10)
trump_model <- lm(votes ~ , trump_nums)
knn
library('knn')
install.packages("knn")
library("class")
knn
trump_model <- lm(votes ~ ., trump_nums)
sort(abs(trump_model$coefficients), decreasing = T)
left_join(trump_model$coefficients, county_features)
left_join(trump_model$coefficients, county_features, by = )
names(trump_model$coefficients)
sort(abs(trump_model$coefficients), decreasing = T)
head(sort(abs(sanders_model$coefficients), decreasing = T), 10)
head(sort(abs(trump_model$coefficients), decreasing = T), 10)
county_features
names(county_features)
names(trump_nums)
names(trump_nums)[names(trump_nums) == county_feature["column_name"]
]
names(trump_nums)[names(trump_nums) == county_features["column_name"]]
names(trump_nums) == county_features["column_name"]
where
which(names(trump_nums) == county_features[column_name])
which(names(trump_nums) == county_features["column_name"])
names(trump_nums)
county_features$column_name
which(names(trump_nums) == county_features$column_name)
trump_nums <- rename()
county_features$column_name
county_features$column_name == trump_nums(names)
county_features$column_name == trump_nums(names)
trump_nums
names(trump_nums)
county_features$column_name == names(trump_nums)
match(county_features$column_name, names(trump_nums))
help(match)
match(names(trump_nums), county_features$column_name)
i <- match(names(trump_nums), county_features$column_name)
i
j <- match(county_features$column_name, names(trump_nums))
j
i
i
j
names(trump_nums)[j] <- county_features[i]
county_features[i]
names(trump_nums)[j] <- county_features$column_name[i]
county_features$column_name[i]
length(county_features$column_name[i])
length(names(trump_nums)[j])
names(trump_nums)[1:][j] <- county_features$column_name[i]
i
j
names(trump_nums)
trump_nums <- subset(trump, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
names(trump_nums)
names(trump_nums)[j]
county_features$column_name[i]
county_features$description[i]
names(trump_nums)[j] <- county_features$description[i]
trump_nums
View(trump_nums)
county_features$description[i]
names(trump_nums)[j]
trump_nums <- subset(trump, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
names(trump_nums)[j]
county_features$description[i]
names(trump_nums) <- county_features$description
View(trump_nums)
names(trump_nums) <- county_features$description[i]
View(trump_nums)
length(county_features)
length(county_features$description)
length(clinton_nums)
c("votes", county_features$description)
c("votes", county_features$description)
county_features
county_features$description
c("votes", county_features$description)
c(county_features$description)
county_features$description
as.data.frame(county_features$description)
c("votes", as.data.frame(county_features$description))
as.list
as.list(county_features$description)
i
i <- match(names(trump_nums), county_features$column_name)
i
i <- match(names(clinton_nums), county_features$column_name)
i
names(trump_nums) <- county_features$description[i]
View(trump_nums)
library("dplyr")
library("class") #for use with k nearest neighbors.
county_features <- read.csv("data/county_facts_dictionary.csv")
county_data <- read.csv("data/county_facts.csv")
results <- read.csv("data/primary_results.csv")
data_with_results <- left_join(results, county_data, by = c("fips" = "fips"))
trump <- filter(data_with_results, candidate == "Donald Trump")
sanders <- filter(data_with_results, candidate == "Bernie Sanders")
clinton <- filter(data_with_results, candidate == "Hillary Clinton")
cruz <- filter(data_with_results, candidate == "Ted Cruz")
trump_nums <- subset(trump, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
sanders_nums <- subset(sanders, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
clinton_nums <- subset(clinton, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
cruz_nums <- subset(cruz, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
i <- match(names(clinton_nums), county_features$column_name)
names(trump_nums) <- county_features$description[i]
names(clinton_nums) <- county_features$description[i]
names(cruz_nums) <- county_features$description[i]
names(sanders_nums) <- county_features$description[i]
trump_model <- lm(votes ~ ., trump_nums)
sanders_model <- lm(votes ~ ., sanders_nums)
clinton_model <- lm(votes ~ ., clinton_nums)
names(trump_nums) <- county_features$description[i]
View(trump_nums)
i
c("votes", i)
i[[1]] <- "votes"
i
trump_nums <- subset(trump, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
sanders_nums <- subset(sanders, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
clinton_nums <- subset(clinton, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
cruz_nums <- subset(cruz, select = - c(state:candidate, fraction_votes:state_abbreviation.y))
i <- match(names(clinton_nums), county_features$column_name)
names(trump_nums) <- county_features$description[i]
names(trump_nums)[[1]] <- "votes"
names(clinton_nums) <- county_features$description[i]
names(clinton_nums)[[1]] <- "votes"
names(cruz_nums) <- county_features$description[i]
names(cruz_nums)[[1]] <- "votes"
names(sanders_nums) <- county_features$description[i]
names(sanders_nums)[[1]] <- "votes"
trump_model <- lm(votes ~ ., trump_nums)
sanders_model <- lm(votes ~ ., sanders_nums)
clinton_model <- lm(votes ~ ., clinton_nums)
cruz_model <- lm(votes ~ ., cruz_nums)
head(sort(abs(sanders_model$coefficients), decreasing = T), 10)
head(sort(abs(sanders_model$coefficients), decreasing = T), 10)
head(sort(abs(sanders_model$coefficients), decreasing = F), 10)
head(sort(abs(sanders_model$coefficients), decreasing = F), 5)
head(sort(abs(sanders_model$coefficients), decreasing = T), 10)
head(sort(abs(sanders_model$coefficients), decreasing = F), 5)
head(sort(abs(sanders_model$coefficients), decreasing = F), 10)
head(sort(abs(sanders_model$coefficients), decreasing = T), 10)
source("util.R")
library("class") #for use with k nearest neighbors.
help(knn)
library("permute")
install.packages("permute")
library("permute")
help(shuffle)
shuffled <- trump_nums[sample.int(nrow(trump_nums)),]
View(shuffled)
length(trump_nums)
nrow(trump_nums)
trump_nums[1:10, ]
train <- shuffled[1:1500, ]
nrow(trian)
nrow(train)
test <- shuffle[1501:length(shuffled), ]
test <- shuffled[1501:length(shuffled), ]
train <- shuffled[1:1500, ]
help(knn)
knn(subset(train, select = -c(votes)), test, train$votes)
knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes)
a <- knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes)
View(a)
test <- knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes)
head(test, 5)
shuffled <- trump_nums[sample.int(nrow(trump_nums)),]
train <- shuffled[1:1500, ]
test <- shuffled[1501:length(shuffled), ]
out <- knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes)
head(out, 5)
head(test, 4)
head(out, 5)
head(test$votes, 4)
head(test$votes, 5)
c(train, test) == shuffled
length(shuffled)
train
c(train, test)
View(test)
View(test)
View(train)
nrow(train)
nrow(test)
shuffled <- trump_nums[sample.int(nrow(trump_nums)),]
train <- shuffled[1:1500, ]
test <- shuffled[1501:nrow(shuffled), ]
train <- shuffled[1:1500, ]
nrow(test)
train <- shuffled[1:1500, ]
nrow(train)
out <- knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes)
head(out, 5)
head(test$votes, 5)
out <- knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes, k = 2)
head(out, 5)
out
View(out)
fnn
install.packages("FNN")
?FNN
library("FNN")
library("FNN")
help(knn)
out <- knn(subset(train, select = -c(votes)), subset(test, select = -c(votes)), train$votes, k = 2)
head(out, 5)
head(test$votes, 5)
out
View(out)
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
View(trump)
View(county_features)
